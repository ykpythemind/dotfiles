set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256,alacritty:RGB'

set -g prefix C-q
unbind C-b
set -s escape-time 0

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left "#[fg=colour108,bg=colour237,bold] [#S] "
set -g status-right ''
set -g status-right-length 50
set -g status-left-length 20

set-option -g status-position bottom

set-option -g window-status-format '#[fg=colour245]#I#{?#{m:#W,zsh},#(basename #{pane_current_path}),#(basename #{pane_current_path})(#W)}#F#[default]'
set-option -g window-status-current-format '#[fg=colour013,bold]#I#{?#{m:#W,zsh},#(basename #{pane_current_path}),#(basename #{pane_current_path})(#W)}#[default]'
set-option -g status-interval 1
set-option -g renumber-windows on

bind r source-file ~/.tmux.conf \; display "Reloaded!"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind o run-shell "open #{pane_current_path}"

# capture the buffer
bind-key C command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# close pane
bind-key C-x kill-pane

bind-key t last-window
bind-key m copy-mode

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

set-option -g base-index 1

set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
unbind -T copy-mode-vi MouseDragEnd1Pane

setw -g mode-keys vi

bind -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"

bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-l next-window
bind -n M-h previous-window

bind -n M-C new-session
bind -n M-j switch-client -n
bind -n M-k switch-client -p

bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-s split-window -v -c "#{pane_current_path}"

bind -n M-a choose-tree
bind -n M-e choose-session
bind -n M-w choose-tree -w

bind x if "tmux display -p \"#{window_panes}\" | grep ^1\$" \
    "confirm-before -p \"Kill the only pane? (y/n)\" kill-pane" \
    "kill-pane"

# https://github.com/christoomey/vim-tmux-navigator {{

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

## }}
